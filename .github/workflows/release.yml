################################################################################
## Full release build.
## Do these as pure crossbuilds to minimize the headaches, and due to 
## the builds occurring less frequently.
################################################################################

name: Build - All
on:
  push:
    branches:
      - release/*
    tags:
      - v1*
  pull_request:
    branches:
      - release/*
    tags:
      - v1*
  pull_request_review:
    types: [ submitted, edited ]
  repository_dispatch:
    types: [ release ]

jobs:
################################################################################
# Base Container
################################################################################
  base:
    name: Release ${{ github.ref }}
    runs-on: ubuntu-20.04
    env:
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
      CONTAINER: base
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7"
      RW_TAG: rootwyrm/dns_base
    steps:
    - name: Check out from ${{ github.ref }}
      id: checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      id: hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name dns_docker --use
    - name: Build for platforms
      run: |
        PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's,/,,g')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --tag $RW_TAG:$VERSION \
        $CONTAINER 
################################################################################
# Consumers
################################################################################
  nsd:
    needs: base
    env: 
      CONTAINER: nsd
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7"
    name: nsd - ${{ matrix.platform }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name dns_docker --use
    - name: Build nsd - ${{ matrix.platform }}
      run: |
        PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's,/,,g')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --tag rootwyrm/$CONTAINER:$VERSION \
        $CONTAINER
  unbound:
    needs: base
    env: 
      CONTAINER: unbound
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
    name: unbound - ${{ matrix.platform }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name dns_docker --use
    - name: Build unbound - ${{ matrix.platform }}
      run: |
        PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's,/,,g')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --tag rootwyrm/$CONTAINER:$VERSION \
        $CONTAINER
  dnsdist:
    needs: base
    env: 
      CONTAINER: dnsdist
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
    name: dnsdist - ${{ matrix.platform }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name dns_docker --use
    - name: Build dnsdist - ${{ matrix.platform }}
      run: |
        PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's,/,,g')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --tag rootwyrm/$CONTAINER:$VERSION \
        $CONTAINER

# vim:ts=2:sw=2:et
