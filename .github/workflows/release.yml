################################################################################
## Full release build.
## Do these as pure crossbuilds to minimize the headaches, and due to 
## the builds occurring less frequently.
################################################################################

name: (release) CICD - Containers
on:
  push:
    branches:
      - release/*
    tags:
      - v*
    paths:
      - 'ci/**'
      - 'containers/**'

jobs:
################################################################################
# Base Container
################################################################################
  base:
    name: Release ${{ github.ref }}
    runs-on: ubuntu-20.04
    env:
      CONTAINER: base
      #BINFMT: "docker.io/rootwyrm/advbinfmt:5.1.0"
      BINFMT: "linuxkit/binfmt"
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v8"
      RW_TAG: rootwyrm/dns_base
    steps:
    - name: Check out from ${{ github.ref }}
      id: checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      id: hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged $BINFMT
        docker buildx create --name buildx_${CONTAINER} --use
    - name: Build for platforms
      run: |
        PLATFORM_TAG=$(echo ${{ matrix.platform }} | sed -e 's,/,,g')
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --build-arg RELEASE=${VERSION} --tag $RW_TAG:${VERSION} \
        container/$CONTAINER 
################################################################################
# Consumers
################################################################################
  nsd:
    needs: base
    env: 
      CONTAINER: nsd
      #BINFMT: "docker.io/rootwyrm/advbinfmt:5.1.0"
      BINFMT: "linuxkit/binfmt"
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v8"
    name: Release - nsd ${{ github.ref }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged $BINFMT
        docker buildx create --name buildx_${CONTAINER} --use
    - name: Build nsd ${{ github.ref }}
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --build-arg RELEASE=${VERSION} --tag rootwyrm/$CONTAINER:$VERSION \
        container/$CONTAINER
        docker logout
  unbound:
    needs: base
    env: 
      CONTAINER: unbound
      #BINFMT: "docker.io/rootwyrm/advbinfmt:5.1.0"
      BINFMT: "linuxkit/binfmt"
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v8"
    name: Release - unbound ${{ github.ref }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged $BINFMT
        docker buildx create --name buildx_${CONTAINER} --use
    - name: Build unbound ${{ github.ref }}
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --build-arg RELEASE=${VERSION} --tag rootwyrm/$CONTAINER:$VERSION \
        container/$CONTAINER
        docker logout
  dnsdist:
    needs: base
    env: 
      CONTAINER: dnsdist
      #BINFMT: "docker.io/rootwyrm/advbinfmt:5.1.0"
      BINFMT: "linuxkit/binfmt"
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v8"
    name: Release - dnsdist ${{ github.ref }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from ${{ github.ref }}
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Run pre-build hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged $BINFMT
        docker buildx create --name buildx_${CONTAINER} --use
    - name: Build dnsdist ${{ github.ref }}
      run: |
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        [ "$VERSION" == "master" ] && VERSION=latest
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --build-arg RELEASE=${VERSION} --tag rootwyrm/$CONTAINER:$VERSION \
        container/$CONTAINER
        docker logout

# vim:ts=2:sw=2:et
