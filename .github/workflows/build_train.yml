## Full crossbuild
name: Build
on:
  push:
    branches: [ master ]
    paths: 
      - '*/ci/*'
      - 'base/*'
  pull_request:
    branches: [ master ]
    paths: 
      - '*/ci/*'
      - 'base/*'
## Rebuild all whenever we bump base...
jobs:
  validate_base:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Validate basic container integrity
      run: docker build base --file base/Dockerfile --tag dns_base:$(date +%s)
  base:
    strategy:
      matrix:
        runs-on: [ ubuntu-20.04 ]
        platform: [ linux/amd64, linux/386, linux/arm64, linux/arm/v6, linux/arm/v7 ]
    name: Base Container - ${{ matrix.platform }}
    needs: validate_base
    runs-on: ${{ matrix.runs-on }}
    env:
      CONTAINER: base
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
      RW_TAG: rootwyrm/dns_base
    steps:
    - name: Check out from HEAD
      uses: actions/checkout@v2
    - name: Set container tags on base
      shell: bash
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up architectures
      shell: bash
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name $CONTAINER
        docker buildx use $CONTAINER
        docker buildx inspect --bootstrap
    - name: Build for platforms
      shell: bash
      run: |
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform ${{ matrix.platform }} --tag $RW_TAG $CONTAINER --push
  consumers:
    strategy:
      matrix:
        runs-on: [ ubuntu-20.04 ]
        consumer: [ dnsdist, unbound, nsd ]
        platform: [ linux/amd64, linux/386, linux/arm64, linux/arm/v6, linux/arm/v7 ]
    name: ${{ matrix.consumer }} - ${{ matrix.platform }}
    needs: base
    runs-on: ${{ matrix.runs-on }}
    env:
      CONTAINER: ${{ matrix.consumer }}
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
    steps:
    - name: Check out from HEAD
      uses: actions/checkout@v2
    - name: Set container tags on dnsdist
      shell: bash
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up buildx
      shell: bash
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name $CONTAINER
        docker buildx use $CONTAINER
    - name: Build ${{ matrix.consumer }} ${{ matrix.platform }}
      shell: bash
      run: |
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform ${{ matrix.platform }} --tag rootwyrm/$CONTAINER $CONTAINER --pull --push

# vim:ts=2:sw=2:et
