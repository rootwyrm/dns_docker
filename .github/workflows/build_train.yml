## Full crossbuild
name: Build - All
on:
  push:
    branches: [ master ]
    paths: 
      - '*/ci/*'
  pull_request:
    branches: [ master ]
    paths: 
      - '*/ci/*'
  pull_request_review:
    types: [ submitted, edited ]
  schedule:
    - cron: '0 /12 * * *'
## Rebuild all whenever we bump base...
jobs:
  validate_base:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout from ${{ github.ref }} triggered by ${{ github.actor }}
      uses: actions/checkout@v2
      id: checkout
    - name: Lint Dockerfile
      id: lint
      run: |
        docker run -it --rm -v $PWD:/root/ \
        projectatomic/dockerfile-lint \
        dockerfile_lint -f base/Dockerfile
    - name: Validate base container integrity
      id: validate
      run: |
        docker build base --file base/Dockerfile \
        --no-cache --label=base_validate --rm \
        --tag dns_base:$(date +%s)
  base:
    name: Build base container
    needs: validate_base
    runs-on: ubuntu-20.04
    env:
      CONTAINER: base
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
      PLATFORM: "linux/amd64,linux/386,linux/arm64,linux/arm/v7"
      RW_TAG: rootwyrm/dns_base
    steps:
    - name: Check out from ${{ github.ref }}
      id: checkout
      uses: actions/checkout@v2
    - name: Run pre-build hooks
      id: hooks
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name rootwyrm --use
    - name: Build for platforms
      shell: bash
      run: |
        docker login -u ${{ secrets.HUB_USER }} -p ${{ secrets.HUB_TOKEN }}
        docker buildx build --platform $PLATFORM --pull --push \
        --tag $RW_TAG:latest \
        $CONTAINER 
  nsd:
    needs: base
    strategy:
      matrix:
        platform: [ linux/amd64, linux/386, linux/arm64, linux/arm/v6, linux/arm/v7 ]
    env: 
      CONTAINER: nsd
      BINFMT: a7996909642ee92942dcd6cff44b9b95f08dad64
    name: nsd - ${{ matrix.platform }}
    runs-on: ubuntu-20.04
    steps:
    - name: Check out from HEAD
      uses: actions/checkout@v2
    - name: Set container tags on dnsdist
      shell: bash
      run: |
        $GITHUB_WORKSPACE/ci/hooks/pre_build
    - name: Set up build environment
      id: buildenv
      run: |
        docker run --rm --privileged docker/binfmt:$BINFMT
        docker buildx create --name rootwyrm --use
    - name: Build nsd - ${{ matrix.platform }}
      run: |
        echo ${{ secrets.HUB_TOKEN }} | docker login docker.io -u ${{ secrets.HUG_USER }} --password-stdin
        docker buildx build --platform ${{ matrix.platform }} \
        --tag rootwyrm/nsd:${{ matrix.platform }} \
        --pull --push nsd
  nsd_package:
    needs: nsd
    name: Package nsd
    runs-on: ubuntu-20.04
    steps:
      - name: Check out from ${{ github.ref }}
        uses: actions/checkout@v2
      - name: Ship nsd manifest
        run: |
          echo ${{ secrets.HUB_TOKEN }} | docker login docker.io -u ${{ secrets.HUG_USER }} --password-stdin
          ${GITHUB_WORKSPACE}/ci/tools/manifest.sh nsd

# vim:ts=2:sw=2:et
